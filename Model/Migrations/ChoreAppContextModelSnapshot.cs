// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Model;

#nullable disable

namespace Model.Migrations
{
    [DbContext(typeof(ChoreAppContext))]
    partial class ChoreAppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Model.Chore", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Duration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("FamilyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Interval")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("OneTimer")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("FamilyId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Chores");
                });

            modelBuilder.Entity("Model.Family", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Families");
                });

            modelBuilder.Entity("Model.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<Guid>("FamilyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("FamilyId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Model.WorkEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AssignedToUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ChoreId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DateDone")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DoneByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id", "AssignedToUserId", "ChoreId");

                    b.HasIndex("AssignedToUserId");

                    b.HasIndex("ChoreId");

                    b.HasIndex("DoneByUserId");

                    b.ToTable("WorkEvents");
                });

            modelBuilder.Entity("Model.WorkTimeslot", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Duration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Weekday")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("WorkTimeslots");
                });

            modelBuilder.Entity("Model.Chore", b =>
                {
                    b.HasOne("Model.User", "User")
                        .WithMany("ChoresCreated")
                        .HasForeignKey("CreatedByUserId");

                    b.HasOne("Model.Family", "Family")
                        .WithMany("Chores")
                        .HasForeignKey("FamilyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Family");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Model.User", b =>
                {
                    b.HasOne("Model.Family", "Family")
                        .WithMany("Users")
                        .HasForeignKey("FamilyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Family");
                });

            modelBuilder.Entity("Model.WorkEvent", b =>
                {
                    b.HasOne("Model.User", "AssignedToUser")
                        .WithMany("WorkEventsAssigned")
                        .HasForeignKey("AssignedToUserId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("Model.Chore", "Chore")
                        .WithMany("WorkEvent")
                        .HasForeignKey("ChoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.User", "DoneByUser")
                        .WithMany("WorkEventsDone")
                        .HasForeignKey("DoneByUserId");

                    b.Navigation("AssignedToUser");

                    b.Navigation("Chore");

                    b.Navigation("DoneByUser");
                });

            modelBuilder.Entity("Model.WorkTimeslot", b =>
                {
                    b.HasOne("Model.User", "User")
                        .WithMany("WorkTimeslots")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Model.Chore", b =>
                {
                    b.Navigation("WorkEvent");
                });

            modelBuilder.Entity("Model.Family", b =>
                {
                    b.Navigation("Chores");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Model.User", b =>
                {
                    b.Navigation("ChoresCreated");

                    b.Navigation("WorkEventsAssigned");

                    b.Navigation("WorkEventsDone");

                    b.Navigation("WorkTimeslots");
                });
#pragma warning restore 612, 618
        }
    }
}
